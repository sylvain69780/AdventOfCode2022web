@inject PuzzleHelper puzzleHelper;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Puzzle Viewer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="scrollable-menu @NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @{
            var puzzles = puzzleHelper.Puzzles.Values.OrderBy(x => x.Number).ToList();
            for (var puzzleIndex = 0; puzzleIndex < puzzles.Count; puzzleIndex++)
            {
                var item = puzzles[puzzleIndex];
                var pageName = $"{(typeof(IIncrementalPuzzleSolver).IsAssignableFrom(item.Type) ? "DefaultPuzzleView" : "puzzle")}/{item.Number}";
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@(pageName)">
                        <span class="oi oi-puzzle-piece"></span><div>
                            <div class="puzzle-number">Puzzle @item.Number</div>
                            <div class="puzzle-title">
                                @item.Title
                            </div>
                        </div>
                    </NavLink>
                </div>
            }
        }

    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
