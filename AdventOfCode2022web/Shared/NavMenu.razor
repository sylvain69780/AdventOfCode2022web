@inject PuzzleHelper puzzleHelper;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Puzzle Viewer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="scrollable-menu @NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            @foreach (var puzzle in puzzleHelper.Puzzles.OrderBy(x => x.Key).Select(x => (x.Value.Number,x.Value.Type.Name,x.Value.Title)))
            {
                <NavLink class="nav-link" href=@(puzzle.Name+"Page")>
                    <span class="oi oi-puzzle-piece"></span><div>
                        <div class="puzzle-number">Puzzle @(puzzle.Number)</div>
                        <div class="puzzle-title">@(puzzle.Title)</div>
                    </div>
                </NavLink>
            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
