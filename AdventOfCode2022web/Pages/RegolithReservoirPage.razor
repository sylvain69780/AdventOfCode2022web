@page "/RegolithReservoirPage"
@inject Domain.RegolithReservoir.RegolithReservoirService PuzzleService
<PuzzleSolutionControllerNEW PuzzleContext="@PuzzleService">
    <img style="width:100%; image-rendering:pixelated" src=@Visualize() />
    <DefaultVisualizationNEW Step="@PuzzleService.Step" Solution="@PuzzleService.Solution" />
</PuzzleSolutionControllerNEW>

@code {
    public string _image64 = string.Empty;

    private string Visualize()
    {
        if (PuzzleService == null || PuzzleService.OccupiedPositions.Count == 0)
            return string.Empty;
        var Width = PuzzleService!.xMax - PuzzleService.xMin;
        var Height = PuzzleService!.yMax - PuzzleService.yMin;
        if (Width == 0 || Height == 0)
            return string.Empty;
        var response = string.Empty;
        using (MemoryStream outStream = new())
        {
            using (Image<Rgba32> img = new(Width, Height))
            {
                img.ProcessPixelRows(accessor =>
                {
                    for (int y = 0; y < accessor.Height; y++)
                    {
                        Span<Rgba32> pixelRow = accessor.GetRowSpan(y);
                        for (int x = 0; x < pixelRow.Length; x++)
                        {
                            ref Rgba32 pixel = ref pixelRow[x];
                            if (PuzzleService.InitialPositions!.Contains((PuzzleService.xMin + x, PuzzleService.yMin + y)))
                                pixel = Color.Blue;
                            else if (PuzzleService.OccupiedPositions!.Contains((PuzzleService.xMin + x, PuzzleService.yMin + y)))
                                pixel = Color.Green;
                            else if (PuzzleService.SandPosition == (PuzzleService.xMin + x, PuzzleService.yMin + y))
                                pixel = Color.Red;
                        }
                    }
                });
                img.SaveAsPng(outStream);
            }
            response = "data:image/png;base64, " + Convert.ToBase64String(outStream.ToArray());
        }
        return response;
    }
}
