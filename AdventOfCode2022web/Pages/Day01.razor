@page "/day01"
@inject HttpClient Http

<div class="mb-3">
    <label class="form-label">The input below is the example data. Paste your own user input from <a href="https://adventofcode.com/2022/day/1">Advent Of Code</a></label>
    <textarea class="form-control" rows="10" @bind="Input" maxlength="10000000"></textarea>
</div>
<div class ="mb-3">
    <div class="mb-3">
        <button class="btn btn-primary" @onclick="SolvePart1">Solve Part 1</button>
    </div>
    <div>@Output1</div>
</div>
<div class="mb-3">
    <div class="mb-3">
        <button class="btn btn-primary" @onclick="SolvePart2">Solve Part 2</button>
    </div>
    <div>@Output2</div>
</div>

@code {
    private string Input { get; set; } = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        Input = (await Http.GetStringAsync("sample-data/day01.txt")).Replace("\r", "");
    }

    private string Output1 { get; set; } = string.Empty;
    private void SolvePart1()
    {
        if (string.IsNullOrWhiteSpace(Input)) return;
        var elfCalories = 0;
        var maxCalories = 0;
        foreach (var line in Input.Split("\n").Append(string.Empty))
        {
            if (line != string.Empty)
                elfCalories += int.Parse(line);
            else
            {
                if (elfCalories > maxCalories)
                    maxCalories = elfCalories;
                elfCalories = 0;
            }
        }
        Output1 = maxCalories.ToString();
    }
    private string Output2 { get; set; } = string.Empty;
    private void SolvePart2()
    {
        if (string.IsNullOrWhiteSpace(Input))
            return;
        var calories = new List<int>();
        var elfCalories = 0;
        foreach (var line in Input.Split("\n").Append(string.Empty))
        {
            if (line != string.Empty)
                elfCalories += int.Parse(line);
            else
            {
                calories.Add(elfCalories);
                elfCalories = 0;
            }
        }
        Output2 = calories.OrderByDescending(x => x).Take(3).Sum().ToString();
    }
}